{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/homogenize-triangles.js","webpack:///./node_modules/three/src/math/Math.js","webpack:///./node_modules/three/src/math/Vector3.js","webpack:///./node_modules/three/src/math/Quaternion.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vector3","require","verts","faces","tol","slice","length","splitFace","vecs","map","_f","vertIdx","segs","_v","_i","vecIndices","deltaVec","subVectors","do_split","j","orderedSegs","sort","_sa","_sb","sharedVtx","shared","forEach","_o","_vi","maxAngle","Math","max","angleTo","newVertsIdx","_oa","_ob","half","clone","multiplyScalar","newVtx","add","push","x","y","z","_fb","_fc","b","e","v1","min","quaternion","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","toString","d0","random","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","Quaternion","w","this","_x","_y","_z","_w","undefined","assign","slerp","qa","qb","qm","copy","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","cos","dir","sqrSin","Number","EPSILON","sin","sqrt","len","atan2","tDir","f","defineProperties","set","onChangeCallback","isQuaternion","constructor","setFromEuler","euler","update","isEuler","Error","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","dot","abs","normalize","q","acos","rotateTowards","step","inverse","conjugate","v","lengthSq","multiply","console","warn","multiplyQuaternions","premultiply","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","equals","fromArray","array","offset","toArray","onChange","callback","__webpack_exports__","isVector3","setScalar","scalar","setX","setY","setZ","setComponent","index","getComponent","addVectors","addScalar","addScaledVector","sub","subScalar","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix3","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","manhattanLength","setLength","alpha","lerpVectors","v2","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","theta","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","fromBufferAttribute","attribute","getX","getY","getZ"],"mappings":"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","file":"homogenize-triangles.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const {Vector3} = require('three/src/math/Vector3');\n\nmodule.exports = function homogenizeTriangles (verts, faces, tol) {\n    verts = verts.slice(0);\n    faces = faces.slice(0);\n\n    for(var i = 0; i < faces.length; i += 3) {\n        let splitFace = () => {\n            const vecs = [0, 1, 2].map(_f => {\n                const vertIdx = faces[i + _f] * 3;\n                return new Vector3(\n                    verts[vertIdx],\n                    verts[vertIdx + 1],\n                    verts[vertIdx + 2]\n                );\n            });\n\n            const segs = vecs.map((_v, _i) => {\n                return {\n                    vecIndices: [_i, (_i+1)%3],\n                    deltaVec: (new Vector3()).subVectors(vecs[(_i+1)%3], _v)\n                };\n            });\n\n            let do_split = false;\n            for(var j = 0; j < 3; j++){\n                if(segs[j].deltaVec.length() > tol){\n                    do_split = true;\n                    break;\n                }\n            }\n\n            if(!do_split){\n                return;\n            }\n\n            let orderedSegs = segs.sort((_sa, _sb)=>{return (_sa.deltaVec.length() > _sb.deltaVec.length())? -1 : 1}).slice(0,2);\n            let sharedVtx = null;\n\n            //find the vertex shared by the two longest edges\n            const shared = {};\n            orderedSegs.forEach(_o => {\n                _o.vecIndices.forEach(_vi => {\n                    shared[_vi] = shared[_vi] || 0;\n                    shared[_vi]++;\n\n                    if(shared[_vi] == 2){\n                        sharedVtx = _vi;\n                    }\n                });\n            });\n\n            //ensure orderedSegs is always in CCW order\n            const maxAngle = (_o) => {\n                Math.max(\n                    vecs[sharedVtx].angleTo(vecs[_o.vecIndices[0]]),\n                    vecs[sharedVtx].angleTo(vecs[_o.vecIndices[1]])\n                );\n            };\n\n            orderedSegs = orderedSegs.sort((_oa, _ob) => {\n                return (maxAngle(_oa) < maxAngle(_ob))? -1 : 1;\n            });\n\n            //create two new vertices\n            const newVertsIdx = orderedSegs.map(_o => {\n                const half = _o.deltaVec.clone().multiplyScalar(0.5);\n\n                const newVtx = vecs[_o.vecIndices[0]].clone();\n                newVtx.add(half);\n\n                verts.push(newVtx.x, newVtx.y, newVtx.z);\n                return (verts.length / 3) - 1;\n\n            });\n\n            //rearrange the faces\n            const _fb = i + ((sharedVtx + 1) % 3);\n            const _fc = i + ((sharedVtx + 2) % 3);\n            const b = faces[_fb];\n            const c = faces[_fc];\n            const d = newVertsIdx[0];\n            const e = newVertsIdx[1];\n\n            faces[_fb] = e;\n            faces[_fc] = d;\n\n            faces.push(e, b, c);\n            faces.push(d, e, c);\n\n            return splitFace();\n        };\n\n        splitFace();\n    }\n\n    return {\n        verts: verts,\n        faces: faces\n    }\n};","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n\nexport { _Math };\n","import { _Math } from './Math.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector3 };\n","/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nimport { _Math } from './Math.js';\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n\nexport { Quaternion };\n"],"sourceRoot":""}