{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/homogenize-triangles.js","webpack:///./src/demo.js","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor","webpack:///external \"vendor\"","webpack:///./node_modules/three/src/math/Math.js","webpack:///./node_modules/three/src/math/Vector3.js","webpack:///./node_modules/three/src/math/Quaternion.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vector3","require","verts","faces","tol","slice","length","splitFace","vecs","map","_f","vertIdx","segs","_v","_i","vecIndices","deltaVec","subVectors","do_split","j","orderedSegs","sort","_sa","_sb","sharedVtx","shared","forEach","_o","_vi","maxAngle","Math","max","angleTo","newVertsIdx","_oa","_ob","half","clone","multiplyScalar","newVtx","add","push","x","y","z","_fb","_fc","b","e","PerspectiveCamera","Scene","WebGLRenderer","Face3","MeshBasicMaterial","Mesh","Geometry","Points","PointsMaterial","BufferGeometry","Float32BufferAttribute","Uint32BufferAttribute","homogenizeTriangles","HomogenizeTrianglesDemo","constructor","this","container","window","document","body","init","animate","onWindowResize","renderer","setSize","innerWidth","innerHeight","camera","aspect","domElement","clientWidth","clientHeight","updateProjectionMatrix","scene","position","lookAt","updateMatrixWorld","setPixelRatio","devicePixelRatio","appendChild","narrowTri","vertices","computeBoundingSphere","computeBoundingBox","computeFaceNormals","computeVertexNormals","createMultiMesh","geo","meshes","mesh","wireframe","color","transparent","opacity","size","_m","_t","dividedTri","res","flat","a","addAttribute","Float32Array","from","setIndex","Uint32Array","addEventListener","requestAnimationFrame","render","demo","vendor","v1","min","quaternion","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","toString","d0","random","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","Quaternion","w","_x","_y","_z","_w","undefined","assign","slerp","qa","qb","qm","copy","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","cos","dir","sqrSin","Number","EPSILON","sin","sqrt","len","atan2","tDir","f","defineProperties","set","onChangeCallback","isQuaternion","setFromEuler","euler","update","isEuler","Error","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","dot","abs","normalize","q","acos","rotateTowards","step","inverse","conjugate","v","lengthSq","multiply","console","warn","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","equals","fromArray","array","offset","toArray","onChange","callback","__webpack_exports__","isVector3","setScalar","scalar","setX","setY","setZ","setComponent","index","getComponent","addVectors","addScalar","addScaledVector","sub","subScalar","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix3","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","manhattanLength","setLength","alpha","lerpVectors","v2","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","theta","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","fromBufferAttribute","attribute","getX","getY","getZ"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,IAIAlC,IAAAmC,EAAA,qBClFA,MAAMC,QAACA,GAAWC,EAAQ,GAE1BlC,EAAOD,QAAU,SAA8BoC,EAAOC,EAAOC,GACzDF,EAAQA,EAAMG,MAAM,GACpBF,EAAQA,EAAME,MAAM,GAEpB,IAAI,IAAIrC,EAAI,EAAGA,EAAImC,EAAMG,OAAQtC,GAAK,EAAG,CACrC,IAAIuC,EAAY,KACZ,MAAMC,EAAO,CAAC,EAAG,EAAG,GAAGC,IAAIC,IACvB,MAAMC,EAA0B,EAAhBR,EAAMnC,EAAI0C,GAC1B,OAAO,IAAIV,EACPE,EAAMS,GACNT,EAAMS,EAAU,GAChBT,EAAMS,EAAU,MAIlBC,EAAOJ,EAAKC,IAAI,CAACI,EAAIC,KAChB,CACHC,WAAY,CAACD,GAAKA,EAAG,GAAG,GACxBE,UAAW,IAAIhB,GAAWiB,WAAWT,GAAMM,EAAG,GAAG,GAAID,MAI7D,IAAIK,GAAW,EACf,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAClB,GAAGP,EAAKO,GAAGH,SAASV,SAAWF,EAAI,CAC/Bc,GAAW,EACX,MAIR,IAAIA,EACA,OAGJ,IAAIE,EAAcR,EAAKS,KAAK,CAACC,EAAKC,IAAeD,EAAIN,SAASV,SAAWiB,EAAIP,SAASV,UAAY,EAAI,GAAID,MAAM,EAAE,GAC9GmB,EAAY,KAGhB,MAAMC,EAAS,GACfL,EAAYM,QAAQC,IAChBA,EAAGZ,WAAWW,QAAQE,IAClBH,EAAOG,GAAOH,EAAOG,IAAQ,EAC7BH,EAAOG,KAEW,GAAfH,EAAOG,KACNJ,EAAYI,OAMxB,MAAMC,EAAYF,IACdG,KAAKC,IACDvB,EAAKgB,GAAWQ,QAAQxB,EAAKmB,EAAGZ,WAAW,KAC3CP,EAAKgB,GAAWQ,QAAQxB,EAAKmB,EAAGZ,WAAW,OAS7CkB,GALNb,EAAcA,EAAYC,KAAK,CAACa,EAAKC,IACzBN,EAASK,GAAOL,EAASM,IAAQ,EAAI,IAIjB1B,IAAIkB,IAChC,MAAMS,EAAOT,EAAGX,SAASqB,QAAQC,eAAe,IAE1CC,EAAS/B,EAAKmB,EAAGZ,WAAW,IAAIsB,QAItC,OAHAE,EAAOC,IAAIJ,GAEXlC,EAAMuC,KAAKF,EAAOG,EAAGH,EAAOI,EAAGJ,EAAOK,GAC9B1C,EAAMI,OAAS,EAAK,IAK1BuC,EAAM7E,GAAMwD,EAAY,GAAK,EAC7BsB,EAAM9E,GAAMwD,EAAY,GAAK,EAC7BuB,EAAI5C,EAAM0C,GACVxE,EAAI8B,EAAM2C,GACVxE,EAAI2D,EAAY,GAChBe,EAAIf,EAAY,GAQtB,OANA9B,EAAM0C,GAAOG,EACb7C,EAAM2C,GAAOxE,EAEb6B,EAAMsC,KAAKO,EAAGD,EAAG1E,GACjB8B,EAAMsC,KAAKnE,EAAG0E,EAAG3E,GAEVkC,KAGXA,IAGJ,MAAO,CACHL,MAAOA,EACPC,MAAOA,qBClGf,MAAM8C,kBACFA,EADEC,MAEFA,EAFEC,cAGFA,EAHEnD,QAIFA,EAJEoD,MAKFA,EALEC,kBAMFA,EANEC,KAOFA,EAPEC,SAQFA,EAREC,OASFA,EATEC,eAUFA,EAVEC,eAWFA,EAXEC,uBAYFA,EAZEC,sBAaFA,GACA3D,EAAQ,GAEN4D,EAAsB5D,EAAQ,GAEpC,MAAM6D,EAEFC,cACIC,KAAKC,UAAYC,OAAOC,SAASC,KACjCJ,KAAKK,OACLL,KAAKM,UAGTC,iBACIP,KAAKQ,SAASC,QAASP,OAAOQ,WAAYR,OAAOS,aACjDX,KAAKY,OAAOC,OAASb,KAAKQ,SAASM,WAAWC,YAAcf,KAAKQ,SAASM,WAAWE,aACrFhB,KAAKY,OAAOK,yBACZjB,KAAKQ,SAASC,QAAST,KAAKQ,SAASM,WAAWC,YAAaf,KAAKQ,SAASM,WAAWE,cAG1FX,OACIL,KAAKkB,MAAQ,IAAIhC,EAEjBc,KAAKY,OAAS,IAAI3B,EAAmB,GAAIiB,OAAOQ,WAAaR,OAAOS,YAAa,EAAG,KACpFX,KAAKY,OAAOO,SAASvC,EAAI,GACzBoB,KAAKY,OAAOQ,OAAO,IAAIpF,EAAQ,EAAE,EAAE,IACnCgE,KAAKY,OAAOS,oBAEZrB,KAAKQ,SAAW,IAAIrB,EACpBa,KAAKQ,SAASc,cAAepB,OAAOqB,kBACpCvB,KAAKQ,SAASC,QAASP,OAAOQ,WAAYR,OAAOS,aAEjDX,KAAKC,UAAUuB,YAAaxB,KAAKQ,SAASM,YAG1C,MAAMW,EAAY,IAAIlC,EACtBkC,EAAUC,SAASjD,KACf,IAAIzC,GAAS,EAAE,EAAE,GACjB,IAAIA,GAAS,GAAG,EAAE,GAClB,IAAIA,EAAQ,GAAG,EAAE,GACjB,IAAIA,EAAQ,EAAE,EAAE,IAGpByF,EAAUtF,MAAMsC,KACZ,IAAIW,EAAM,EAAE,EAAE,GACd,IAAIA,EAAM,EAAE,EAAE,IAGlBqC,EAAUE,wBACVF,EAAUG,qBACVH,EAAUI,qBACVJ,EAAUK,uBAEV,MAAMC,EAAmBC,IACrB,MAAMC,EAAS,GAEf,IAAIC,EAAO,IAAI5C,EAAK0C,EAAK,IAAI3C,EAAkB,CAC3C8C,WAAW,EACXC,MAAO,YAwBX,OArBAH,EAAOxD,KAAKyD,GAEZA,EAAO,IAAI5C,EAAK0C,EAAK,IAAI3C,EAAkB,CACvCgD,aAAa,EACbC,QAAS,GACTF,MAAO,YAGXH,EAAOxD,KAAKyD,GAEZA,EAAO,IAAI1C,EAAOwC,EAAK,IAAIvC,EAAe,CACtC8C,KAAM,EACNH,MAAO,YAGXH,EAAOxD,KAAKyD,GAEZD,EAAOvE,QAAQ8E,IACXxC,KAAKkB,MAAM1C,IAAIgE,KAGZP,GAGXF,EAAgBN,GAAW/D,QAAQ+E,IAC/BA,EAAGtB,SAASzC,GAAK,KAGrB,MAAMgE,EAAa,IAAIhD,EACjBiD,EAAM9C,EACR4B,EAAUC,SAASjF,IAAII,GAAc,CAACA,EAAG6B,EAAG7B,EAAG8B,EAAG9B,EAAG+B,IAAKgE,OAC1DnB,EAAUtF,MAAMM,IAAIC,GAAc,CAACA,EAAGmG,EAAGnG,EAAGqC,EAAGrC,EAAGrC,IAAKuI,OACvD,GAGJF,EAAWI,aAAa,WAAY,IAAInD,EAAuBoD,aAAaC,KAAKL,EAAIzG,OAAQ,IAC7FwG,EAAWO,SAAS,IAAIrD,EAAsBsD,YAAYF,KAAKL,EAAIxG,OAAQ,IAE3E4F,EAAgBW,GAAYhF,QAAQ+E,IAChCA,EAAGtB,SAASzC,EAAI,KAGpBwB,OAAOiD,iBAAkB,SAAU,KAC/BnD,KAAKO,mBACN,GAGPD,UACI8C,sBAAuB,KACnBpD,KAAKM,YAGTN,KAAKQ,SAAS6C,OAAQrD,KAAKkB,MAAOlB,KAAKY,SAI/CV,OAAOiD,iBAAiB,mBAAoB,WACxCjD,OAAOoD,KAAO,IAAIxD,qBCnItB/F,EAAAD,QAAAF,EAAA,qBCAAG,EAAAD,QAAAyJ,4CCKA,ICoiBAC,EAlKAC,EACA1F,EA7JA2F,EDtOAC,EAAA,CAEAC,QAAA9F,KAAA+F,GAAA,IACAC,QAAA,IAAAhG,KAAA+F,GAEAE,aAAA,WAMA,IAFA,IAAAC,EAAA,GAEAhK,EAAA,EAAkBA,EAAA,IAASA,IAE3BgK,EAAAhK,MAAA,aAAAiK,SAAA,IAIA,kBAEA,IAAAC,EAAA,WAAApG,KAAAqG,SAAA,EACAC,EAAA,WAAAtG,KAAAqG,SAAA,EACAE,EAAA,WAAAvG,KAAAqG,SAAA,EACAG,EAAA,WAAAxG,KAAAqG,SAAA,EAOA,OANAH,EAAA,IAAAE,GAAAF,EAAAE,GAAA,OAAAF,EAAAE,GAAA,QAAAF,EAAAE,GAAA,YACAF,EAAA,IAAAI,GAAAJ,EAAAI,GAAA,WAAAJ,EAAAI,GAAA,UAAAJ,EAAAI,GAAA,YACAJ,EAAA,GAAAK,EAAA,KAAAL,EAAAK,GAAA,WAAAL,EAAAK,GAAA,QAAAL,EAAAK,GAAA,QACAL,EAAA,IAAAM,GAAAN,EAAAM,GAAA,OAAAN,EAAAM,GAAA,QAAAN,EAAAM,GAAA,SAGAC,eAxBA,GA8BAC,MAAA,SAAAvJ,EAAAwI,EAAA1F,GAEA,OAAAD,KAAAC,IAAA0F,EAAA3F,KAAA2F,IAAA1F,EAAA9C,KAOAwJ,gBAAA,SAAAhJ,EAAArB,GAEA,OAAAqB,EAAArB,QAMAsK,UAAA,SAAAhG,EAAAiG,EAAAC,EAAAC,EAAAC,GAEA,OAAAD,GAAAnG,EAAAiG,IAAAG,EAAAD,IAAAD,EAAAD,IAMAI,KAAA,SAAArG,EAAAC,EAAAzD,GAEA,SAAAA,GAAAwD,EAAAxD,EAAAyD,GAMAqG,WAAA,SAAAtG,EAAA+E,EAAA1F,GAEA,OAAAW,GAAA+E,EAAA,EACA/E,GAAAX,EAAA,GAEAW,KAAA+E,IAAA1F,EAAA0F,IAEA/E,GAAA,IAAAA,IAIAuG,aAAA,SAAAvG,EAAA+E,EAAA1F,GAEA,OAAAW,GAAA+E,EAAA,EACA/E,GAAAX,EAAA,GAEAW,KAAA+E,IAAA1F,EAAA0F,IAEA/E,QAAA,EAAAA,EAAA,SAMAwG,QAAA,SAAAC,EAAAC,GAEA,OAAAD,EAAArH,KAAAuH,MAAAvH,KAAAqG,UAAAiB,EAAAD,EAAA,KAMAG,UAAA,SAAAH,EAAAC,GAEA,OAAAD,EAAArH,KAAAqG,UAAAiB,EAAAD,IAMAI,gBAAA,SAAAC,GAEA,OAAAA,GAAA,GAAA1H,KAAAqG,WAIAsB,SAAA,SAAAC,GAEA,OAAAA,EAAA/B,EAAAC,SAIA+B,SAAA,SAAAC,GAEA,OAAAA,EAAAjC,EAAAG,SAIA+B,aAAA,SAAA5K,GAEA,WAAAA,IAAA,QAAAA,GAIA6K,eAAA,SAAA7K,GAEA,OAAA6C,KAAAiI,IAAA,EAAAjI,KAAAkI,KAAAlI,KAAAmI,IAAAhL,GAAA6C,KAAAoI,OAIAC,gBAAA,SAAAlL,GAEA,OAAA6C,KAAAiI,IAAA,EAAAjI,KAAAuH,MAAAvH,KAAAmI,IAAAhL,GAAA6C,KAAAoI,QExIA,SAAAE,EAAA1H,EAAAC,EAAAC,EAAAyH,GAEArG,KAAAsG,GAAA5H,GAAA,EACAsB,KAAAuG,GAAA5H,GAAA,EACAqB,KAAAwG,GAAA5H,GAAA,EACAoB,KAAAyG,QAAAC,IAAAL,IAAA,EDFA,SAAArK,EAAA0C,EAAAC,EAAAC,GAEAoB,KAAAtB,KAAA,EACAsB,KAAArB,KAAA,EACAqB,KAAApB,KAAA,ECEAlE,OAAAiM,OAAAP,EAAA,CAEAQ,MAAA,SAAAC,EAAAC,EAAAC,EAAA7L,GAEA,OAAA6L,EAAAC,KAAAH,GAAAD,MAAAE,EAAA5L,IAIA+L,UAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArM,GAIA,IAAAsM,EAAAJ,EAAAC,EAAA,GACAI,EAAAL,EAAAC,EAAA,GACAK,EAAAN,EAAAC,EAAA,GACAM,EAAAP,EAAAC,EAAA,GAEAO,EAAAN,EAAAC,EAAA,GACAM,EAAAP,EAAAC,EAAA,GACAO,EAAAR,EAAAC,EAAA,GACAQ,EAAAT,EAAAC,EAAA,GAEA,GAAAI,IAAAI,GAAAP,IAAAI,GAAAH,IAAAI,GAAAH,IAAAI,EAAA,CAEA,IAAA/L,EAAA,EAAAb,EAEA8M,EAAAR,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,EAEAE,EAAAD,GAAA,OACAE,EAAA,EAAAF,IAGA,GAAAE,EAAAC,OAAAC,QAAA,CAEA,IAAAC,EAAAvK,KAAAwK,KAAAJ,GACAK,EAAAzK,KAAA0K,MAAAH,EAAAL,EAAAC,GAEAlM,EAAA+B,KAAAuK,IAAAtM,EAAAwM,GAAAF,EACAnN,EAAA4C,KAAAuK,IAAAnN,EAAAqN,GAAAF,EAIA,IAAAI,EAAAvN,EAAA+M,EAQA,GANAT,IAAAzL,EAAA6L,EAAAa,EACAhB,IAAA1L,EAAA8L,EAAAY,EACAf,IAAA3L,EAAA+L,EAAAW,EACAd,IAAA5L,EAAAgM,EAAAU,EAGA1M,IAAA,EAAAb,EAAA,CAEA,IAAAwN,EAAA,EAAA5K,KAAAwK,KAAAd,IAAAC,IAAAC,IAAAC,KAEAH,GAAAkB,EACAjB,GAAAiB,EACAhB,GAAAgB,EACAf,GAAAe,GAMAxB,EAAAC,GAAAK,EACAN,EAAAC,EAAA,GAAAM,EACAP,EAAAC,EAAA,GAAAO,EACAR,EAAAC,EAAA,GAAAQ,KAMAjN,OAAAiO,iBAAAvC,EAAAxK,UAAA,CAEA8C,EAAA,CAEA7D,IAAA,WAEA,OAAAmF,KAAAsG,IAIAsC,IAAA,SAAA3N,GAEA+E,KAAAsG,GAAArL,EACA+E,KAAA6I,qBAMAlK,EAAA,CAEA9D,IAAA,WAEA,OAAAmF,KAAAuG,IAIAqC,IAAA,SAAA3N,GAEA+E,KAAAuG,GAAAtL,EACA+E,KAAA6I,qBAMAjK,EAAA,CAEA/D,IAAA,WAEA,OAAAmF,KAAAwG,IAIAoC,IAAA,SAAA3N,GAEA+E,KAAAwG,GAAAvL,EACA+E,KAAA6I,qBAMAxC,EAAA,CAEAxL,IAAA,WAEA,OAAAmF,KAAAyG,IAIAmC,IAAA,SAAA3N,GAEA+E,KAAAyG,GAAAxL,EACA+E,KAAA6I,uBAQAnO,OAAAiM,OAAAP,EAAAxK,UAAA,CAEAkN,cAAA,EAEAF,IAAA,SAAAlK,EAAAC,EAAAC,EAAAyH,GASA,OAPArG,KAAAsG,GAAA5H,EACAsB,KAAAuG,GAAA5H,EACAqB,KAAAwG,GAAA5H,EACAoB,KAAAyG,GAAAJ,EAEArG,KAAA6I,mBAEA7I,MAIA3B,MAAA,WAEA,WAAA2B,KAAAD,YAAAC,KAAAsG,GAAAtG,KAAAuG,GAAAvG,KAAAwG,GAAAxG,KAAAyG,KAIAO,KAAA,SAAAtD,GASA,OAPA1D,KAAAsG,GAAA5C,EAAAhF,EACAsB,KAAAuG,GAAA7C,EAAA/E,EACAqB,KAAAwG,GAAA9C,EAAA9E,EACAoB,KAAAyG,GAAA/C,EAAA2C,EAEArG,KAAA6I,mBAEA7I,MAIA+I,aAAA,SAAAC,EAAAC,GAEA,IAAAD,MAAAE,QAEA,UAAAC,MAAA,oGAIA,IAAAzK,EAAAsK,EAAA1C,GAAA3H,EAAAqK,EAAAzC,GAAA3H,EAAAoK,EAAAxC,GAAA4C,EAAAJ,EAAAI,MAMApB,EAAAlK,KAAAkK,IACAK,EAAAvK,KAAAuK,IAEAgB,EAAArB,EAAAtJ,EAAA,GACA4K,EAAAtB,EAAArJ,EAAA,GACA4K,EAAAvB,EAAApJ,EAAA,GAEA4K,EAAAnB,EAAA3J,EAAA,GACA+K,EAAApB,EAAA1J,EAAA,GACA+K,EAAArB,EAAAzJ,EAAA,GAgDA,MA9CA,QAAAwK,GAEApJ,KAAAsG,GAAAkD,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACA1J,KAAAuG,GAAA8C,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACA1J,KAAAwG,GAAA6C,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACAvJ,KAAAyG,GAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAAN,GAEHpJ,KAAAsG,GAAAkD,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACA1J,KAAAuG,GAAA8C,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACA1J,KAAAwG,GAAA6C,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACAvJ,KAAAyG,GAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAAN,GAEHpJ,KAAAsG,GAAAkD,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACA1J,KAAAuG,GAAA8C,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACA1J,KAAAwG,GAAA6C,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACAvJ,KAAAyG,GAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAAN,GAEHpJ,KAAAsG,GAAAkD,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACA1J,KAAAuG,GAAA8C,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACA1J,KAAAwG,GAAA6C,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACAvJ,KAAAyG,GAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAAN,GAEHpJ,KAAAsG,GAAAkD,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACA1J,KAAAuG,GAAA8C,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACA1J,KAAAwG,GAAA6C,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACAvJ,KAAAyG,GAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAAN,IAEHpJ,KAAAsG,GAAAkD,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACA1J,KAAAuG,GAAA8C,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACA1J,KAAAwG,GAAA6C,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACAvJ,KAAAyG,GAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAIA,IAAAT,GAAAjJ,KAAA6I,mBAEA7I,MAIA2J,iBAAA,SAAAC,EAAAC,GAMA,IAAAC,EAAAD,EAAA,EAAA9N,EAAA+B,KAAAuK,IAAAyB,GASA,OAPA9J,KAAAsG,GAAAsD,EAAAlL,EAAA3C,EACAiE,KAAAuG,GAAAqD,EAAAjL,EAAA5C,EACAiE,KAAAwG,GAAAoD,EAAAhL,EAAA7C,EACAiE,KAAAyG,GAAA3I,KAAAkK,IAAA8B,GAEA9J,KAAA6I,mBAEA7I,MAIA+J,sBAAA,SAAA3P,GAMA,IAOA2B,EAPAiO,EAAA5P,EAAA6P,SAEAC,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,IAEAW,EAAAT,EAAAI,EAAAI,EA2CA,OAxCAC,EAAA,GAEA5O,EAAA,GAAA+B,KAAAwK,KAAAqC,EAAA,GAEA3K,KAAAyG,GAAA,IAAA1K,EACAiE,KAAAsG,IAAAmE,EAAAF,GAAAxO,EACAiE,KAAAuG,IAAA6D,EAAAI,GAAAzO,EACAiE,KAAAwG,IAAA6D,EAAAF,GAAApO,GAEGmO,EAAAI,GAAAJ,EAAAQ,GAEH3O,EAAA,EAAA+B,KAAAwK,KAAA,EAAA4B,EAAAI,EAAAI,GAEA1K,KAAAyG,IAAAgE,EAAAF,GAAAxO,EACAiE,KAAAsG,GAAA,IAAAvK,EACAiE,KAAAuG,IAAA4D,EAAAE,GAAAtO,EACAiE,KAAAwG,IAAA4D,EAAAI,GAAAzO,GAEGuO,EAAAI,GAEH3O,EAAA,EAAA+B,KAAAwK,KAAA,EAAAgC,EAAAJ,EAAAQ,GAEA1K,KAAAyG,IAAA2D,EAAAI,GAAAzO,EACAiE,KAAAsG,IAAA6D,EAAAE,GAAAtO,EACAiE,KAAAuG,GAAA,IAAAxK,EACAiE,KAAAwG,IAAA+D,EAAAE,GAAA1O,IAIAA,EAAA,EAAA+B,KAAAwK,KAAA,EAAAoC,EAAAR,EAAAI,GAEAtK,KAAAyG,IAAA4D,EAAAF,GAAApO,EACAiE,KAAAsG,IAAA8D,EAAAI,GAAAzO,EACAiE,KAAAuG,IAAAgE,EAAAE,GAAA1O,EACAiE,KAAAwG,GAAA,IAAAzK,GAIAiE,KAAA6I,mBAEA7I,MAIA4K,mBAAA,SAAAC,EAAAC,GAIA,IAEAhQ,EAAA+P,EAAAE,IAAAD,GAAA,EAiCA,OA/BAhQ,EAJA,MAMAA,EAAA,EAEAgD,KAAAkN,IAAAH,EAAAnM,GAAAZ,KAAAkN,IAAAH,EAAAjM,IAEAoB,KAAAsG,IAAAuE,EAAAlM,EACAqB,KAAAuG,GAAAsE,EAAAnM,EACAsB,KAAAwG,GAAA,EACAxG,KAAAyG,GAAA3L,IAIAkF,KAAAsG,GAAA,EACAtG,KAAAuG,IAAAsE,EAAAjM,EACAoB,KAAAwG,GAAAqE,EAAAlM,EACAqB,KAAAyG,GAAA3L,KAQAkF,KAAAsG,GAAAuE,EAAAlM,EAAAmM,EAAAlM,EAAAiM,EAAAjM,EAAAkM,EAAAnM,EACAqB,KAAAuG,GAAAsE,EAAAjM,EAAAkM,EAAApM,EAAAmM,EAAAnM,EAAAoM,EAAAlM,EACAoB,KAAAwG,GAAAqE,EAAAnM,EAAAoM,EAAAnM,EAAAkM,EAAAlM,EAAAmM,EAAApM,EACAsB,KAAAyG,GAAA3L,GAIAkF,KAAAiL,aAIAjN,QAAA,SAAAkN,GAEA,SAAApN,KAAAqN,KAAArN,KAAAkN,IAAkCrH,EAAKa,MAAAxE,KAAA+K,IAAAG,IAAA,QAIvCE,cAAA,SAAAF,EAAAG,GAEA,IAAAxB,EAAA7J,KAAAhC,QAAAkN,GAEA,OAAArB,EAAA,OAAA7J,KAEA,IAAA9E,EAAA4C,KAAA2F,IAAA,EAAA4H,EAAAxB,GAIA,OAFA7J,KAAA4G,MAAAsE,EAAAhQ,GAEA8E,MAIAsL,QAAA,WAIA,OAAAtL,KAAAuL,aAIAA,UAAA,WAQA,OANAvL,KAAAsG,KAAA,EACAtG,KAAAuG,KAAA,EACAvG,KAAAwG,KAAA,EAEAxG,KAAA6I,mBAEA7I,MAIA+K,IAAA,SAAAS,GAEA,OAAAxL,KAAAsG,GAAAkF,EAAAlF,GAAAtG,KAAAuG,GAAAiF,EAAAjF,GAAAvG,KAAAwG,GAAAgF,EAAAhF,GAAAxG,KAAAyG,GAAA+E,EAAA/E,IAIAgF,SAAA,WAEA,OAAAzL,KAAAsG,GAAAtG,KAAAsG,GAAAtG,KAAAuG,GAAAvG,KAAAuG,GAAAvG,KAAAwG,GAAAxG,KAAAwG,GAAAxG,KAAAyG,GAAAzG,KAAAyG,IAIAnK,OAAA,WAEA,OAAAwB,KAAAwK,KAAAtI,KAAAsG,GAAAtG,KAAAsG,GAAAtG,KAAAuG,GAAAvG,KAAAuG,GAAAvG,KAAAwG,GAAAxG,KAAAwG,GAAAxG,KAAAyG,GAAAzG,KAAAyG,KAIAwE,UAAA,WAEA,IAAAhR,EAAA+F,KAAA1D,SAsBA,OApBA,IAAArC,GAEA+F,KAAAsG,GAAA,EACAtG,KAAAuG,GAAA,EACAvG,KAAAwG,GAAA,EACAxG,KAAAyG,GAAA,IAIAxM,EAAA,EAAAA,EAEA+F,KAAAsG,GAAAtG,KAAAsG,GAAArM,EACA+F,KAAAuG,GAAAvG,KAAAuG,GAAAtM,EACA+F,KAAAwG,GAAAxG,KAAAwG,GAAAvM,EACA+F,KAAAyG,GAAAzG,KAAAyG,GAAAxM,GAIA+F,KAAA6I,mBAEA7I,MAIA0L,SAAA,SAAAR,EAAApP,GAEA,YAAA4K,IAAA5K,GAEA6P,QAAAC,KAAA,0GACA5L,KAAA6L,oBAAAX,EAAApP,IAIAkE,KAAA6L,oBAAA7L,KAAAkL,IAIAY,YAAA,SAAAZ,GAEA,OAAAlL,KAAA6L,oBAAAX,EAAAlL,OAIA6L,oBAAA,SAAAhJ,EAAA9D,GAIA,IAAAgN,EAAAlJ,EAAAyD,GAAA0F,EAAAnJ,EAAA0D,GAAA0F,EAAApJ,EAAA2D,GAAA0F,EAAArJ,EAAA4D,GACA0F,EAAApN,EAAAuH,GAAA8F,EAAArN,EAAAwH,GAAA8F,EAAAtN,EAAAyH,GAAA8F,EAAAvN,EAAA0H,GASA,OAPAzG,KAAAsG,GAAAyF,EAAAO,EAAAJ,EAAAC,EAAAH,EAAAK,EAAAJ,EAAAG,EACApM,KAAAuG,GAAAyF,EAAAM,EAAAJ,EAAAE,EAAAH,EAAAE,EAAAJ,EAAAM,EACArM,KAAAwG,GAAAyF,EAAAK,EAAAJ,EAAAG,EAAAN,EAAAK,EAAAJ,EAAAG,EACAnM,KAAAyG,GAAAyF,EAAAI,EAAAP,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,EAEArM,KAAA6I,mBAEA7I,MAIA4G,MAAA,SAAAE,EAAA5L,GAEA,OAAAA,EAAA,OAAA8E,KACA,OAAA9E,EAAA,OAAA8E,KAAAgH,KAAAF,GAEA,IAAApI,EAAAsB,KAAAsG,GAAA3H,EAAAqB,KAAAuG,GAAA3H,EAAAoB,KAAAwG,GAAAH,EAAArG,KAAAyG,GAIA8F,EAAAlG,EAAAS,EAAAL,GAAA/H,EAAAoI,EAAAR,GAAA3H,EAAAmI,EAAAP,GAAA3H,EAAAkI,EAAAN,GAiBA,GAfA+F,EAAA,GAEAvM,KAAAyG,IAAAK,EAAAL,GACAzG,KAAAsG,IAAAQ,EAAAR,GACAtG,KAAAuG,IAAAO,EAAAP,GACAvG,KAAAwG,IAAAM,EAAAN,GAEA+F,MAIAvM,KAAAgH,KAAAF,GAIAyF,GAAA,EAOA,OALAvM,KAAAyG,GAAAJ,EACArG,KAAAsG,GAAA5H,EACAsB,KAAAuG,GAAA5H,EACAqB,KAAAwG,GAAA5H,EAEAoB,KAIA,IAAAwM,EAAA,EAAAD,IAEA,GAAAC,GAAArE,OAAAC,QAAA,CAEA,IAAArM,EAAA,EAAAb,EAMA,OALA8E,KAAAyG,GAAA1K,EAAAsK,EAAAnL,EAAA8E,KAAAyG,GACAzG,KAAAsG,GAAAvK,EAAA2C,EAAAxD,EAAA8E,KAAAsG,GACAtG,KAAAuG,GAAAxK,EAAA4C,EAAAzD,EAAA8E,KAAAuG,GACAvG,KAAAwG,GAAAzK,EAAA6C,EAAA1D,EAAA8E,KAAAwG,GAEAxG,KAAAiL,YAIA,IAAAwB,EAAA3O,KAAAwK,KAAAkE,GACAE,EAAA5O,KAAA0K,MAAAiE,EAAAF,GACAI,EAAA7O,KAAAuK,KAAA,EAAAnN,GAAAwR,GAAAD,EACAG,EAAA9O,KAAAuK,IAAAnN,EAAAwR,GAAAD,EASA,OAPAzM,KAAAyG,GAAAJ,EAAAsG,EAAA3M,KAAAyG,GAAAmG,EACA5M,KAAAsG,GAAA5H,EAAAiO,EAAA3M,KAAAsG,GAAAsG,EACA5M,KAAAuG,GAAA5H,EAAAgO,EAAA3M,KAAAuG,GAAAqG,EACA5M,KAAAwG,GAAA5H,EAAA+N,EAAA3M,KAAAwG,GAAAoG,EAEA5M,KAAA6I,mBAEA7I,MAIA6M,OAAA,SAAAnJ,GAEA,OAAAA,EAAA4C,KAAAtG,KAAAsG,IAAA5C,EAAA6C,KAAAvG,KAAAuG,IAAA7C,EAAA8C,KAAAxG,KAAAwG,IAAA9C,EAAA+C,KAAAzG,KAAAyG,IAIAqG,UAAA,SAAAC,EAAAC,GAWA,YATAtG,IAAAsG,MAAA,GAEAhN,KAAAsG,GAAAyG,EAAAC,GACAhN,KAAAuG,GAAAwG,EAAAC,EAAA,GACAhN,KAAAwG,GAAAuG,EAAAC,EAAA,GACAhN,KAAAyG,GAAAsG,EAAAC,EAAA,GAEAhN,KAAA6I,mBAEA7I,MAIAiN,QAAA,SAAAF,EAAAC,GAUA,YARAtG,IAAAqG,MAAA,SACArG,IAAAsG,MAAA,GAEAD,EAAAC,GAAAhN,KAAAsG,GACAyG,EAAAC,EAAA,GAAAhN,KAAAuG,GACAwG,EAAAC,EAAA,GAAAhN,KAAAwG,GACAuG,EAAAC,EAAA,GAAAhN,KAAAyG,GAEAsG,GAIAG,SAAA,SAAAC,GAIA,OAFAnN,KAAA6I,iBAAAsE,EAEAnN,MAIA6I,iBAAA,eDnnBAjP,EAAAU,EAAA8S,EAAA,4BAAApR,IAoBAtB,OAAAiM,OAAA3K,EAAAJ,UAAA,CAEAyR,WAAA,EAEAzE,IAAA,SAAAlK,EAAAC,EAAAC,GAMA,OAJAoB,KAAAtB,IACAsB,KAAArB,IACAqB,KAAApB,IAEAoB,MAIAsN,UAAA,SAAAC,GAMA,OAJAvN,KAAAtB,EAAA6O,EACAvN,KAAArB,EAAA4O,EACAvN,KAAApB,EAAA2O,EAEAvN,MAIAwN,KAAA,SAAA9O,GAIA,OAFAsB,KAAAtB,IAEAsB,MAIAyN,KAAA,SAAA9O,GAIA,OAFAqB,KAAArB,IAEAqB,MAIA0N,KAAA,SAAA9O,GAIA,OAFAoB,KAAApB,IAEAoB,MAIA2N,aAAA,SAAAC,EAAA3S,GAEA,OAAA2S,GAEA,OAAA5N,KAAAtB,EAAAzD,EAA0B,MAC1B,OAAA+E,KAAArB,EAAA1D,EAA0B,MAC1B,OAAA+E,KAAApB,EAAA3D,EAA0B,MAC1B,kBAAAkO,MAAA,0BAAAyE,GAIA,OAAA5N,MAIA6N,aAAA,SAAAD,GAEA,OAAAA,GAEA,cAAA5N,KAAAtB,EACA,cAAAsB,KAAArB,EACA,cAAAqB,KAAApB,EACA,kBAAAuK,MAAA,0BAAAyE,KAMAvP,MAAA,WAEA,WAAA2B,KAAAD,YAAAC,KAAAtB,EAAAsB,KAAArB,EAAAqB,KAAApB,IAIAoI,KAAA,SAAAwE,GAMA,OAJAxL,KAAAtB,EAAA8M,EAAA9M,EACAsB,KAAArB,EAAA6M,EAAA7M,EACAqB,KAAApB,EAAA4M,EAAA5M,EAEAoB,MAIAxB,IAAA,SAAAgN,EAAAnF,GAEA,YAAAK,IAAAL,GAEAsF,QAAAC,KAAA,yFACA5L,KAAA8N,WAAAtC,EAAAnF,KAIArG,KAAAtB,GAAA8M,EAAA9M,EACAsB,KAAArB,GAAA6M,EAAA7M,EACAqB,KAAApB,GAAA4M,EAAA5M,EAEAoB,OAIA+N,UAAA,SAAAhS,GAMA,OAJAiE,KAAAtB,GAAA3C,EACAiE,KAAArB,GAAA5C,EACAiE,KAAApB,GAAA7C,EAEAiE,MAIA8N,WAAA,SAAAjL,EAAA9D,GAMA,OAJAiB,KAAAtB,EAAAmE,EAAAnE,EAAAK,EAAAL,EACAsB,KAAArB,EAAAkE,EAAAlE,EAAAI,EAAAJ,EACAqB,KAAApB,EAAAiE,EAAAjE,EAAAG,EAAAH,EAEAoB,MAIAgO,gBAAA,SAAAxC,EAAAzP,GAMA,OAJAiE,KAAAtB,GAAA8M,EAAA9M,EAAA3C,EACAiE,KAAArB,GAAA6M,EAAA7M,EAAA5C,EACAiE,KAAApB,GAAA4M,EAAA5M,EAAA7C,EAEAiE,MAIAiO,IAAA,SAAAzC,EAAAnF,GAEA,YAAAK,IAAAL,GAEAsF,QAAAC,KAAA,yFACA5L,KAAA/C,WAAAuO,EAAAnF,KAIArG,KAAAtB,GAAA8M,EAAA9M,EACAsB,KAAArB,GAAA6M,EAAA7M,EACAqB,KAAApB,GAAA4M,EAAA5M,EAEAoB,OAIAkO,UAAA,SAAAnS,GAMA,OAJAiE,KAAAtB,GAAA3C,EACAiE,KAAArB,GAAA5C,EACAiE,KAAApB,GAAA7C,EAEAiE,MAIA/C,WAAA,SAAA4F,EAAA9D,GAMA,OAJAiB,KAAAtB,EAAAmE,EAAAnE,EAAAK,EAAAL,EACAsB,KAAArB,EAAAkE,EAAAlE,EAAAI,EAAAJ,EACAqB,KAAApB,EAAAiE,EAAAjE,EAAAG,EAAAH,EAEAoB,MAIA0L,SAAA,SAAAF,EAAAnF,GAEA,YAAAK,IAAAL,GAEAsF,QAAAC,KAAA,mGACA5L,KAAAmO,gBAAA3C,EAAAnF,KAIArG,KAAAtB,GAAA8M,EAAA9M,EACAsB,KAAArB,GAAA6M,EAAA7M,EACAqB,KAAApB,GAAA4M,EAAA5M,EAEAoB,OAIA1B,eAAA,SAAAiP,GAMA,OAJAvN,KAAAtB,GAAA6O,EACAvN,KAAArB,GAAA4O,EACAvN,KAAApB,GAAA2O,EAEAvN,MAIAmO,gBAAA,SAAAtL,EAAA9D,GAMA,OAJAiB,KAAAtB,EAAAmE,EAAAnE,EAAAK,EAAAL,EACAsB,KAAArB,EAAAkE,EAAAlE,EAAAI,EAAAJ,EACAqB,KAAApB,EAAAiE,EAAAjE,EAAAG,EAAAH,EAEAoB,MAIAoO,YAEA1K,EAAA,IAAuB0C,EAEvB,SAAA4C,GAQA,OANAA,KAAAE,SAEAyC,QAAA0C,MAAA,+FAIArO,KAAAsO,gBAAA5K,EAAAqF,aAAAC,MAMAuF,eAAA,WAEA,IAAA7K,EAAA,IAAuB0C,EAEvB,gBAAAwD,EAAAC,GAEA,OAAA7J,KAAAsO,gBAAA5K,EAAAiG,iBAAAC,EAAAC,KANA,GAYA2E,aAAA,SAAApU,GAEA,IAAAsE,EAAAsB,KAAAtB,EAAAC,EAAAqB,KAAArB,EAAAC,EAAAoB,KAAApB,EACAI,EAAA5E,EAAA6P,SAMA,OAJAjK,KAAAtB,EAAAM,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAAJ,EACAoB,KAAArB,EAAAK,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAAJ,EACAoB,KAAApB,EAAAI,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAAJ,EAEAoB,MAIAyO,aAAA,SAAArU,GAEA,IAAAsE,EAAAsB,KAAAtB,EAAAC,EAAAqB,KAAArB,EAAAC,EAAAoB,KAAApB,EACAI,EAAA5E,EAAA6P,SAEA5D,EAAA,GAAArH,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,IAAAJ,EAAAI,EAAA,KAMA,OAJAgB,KAAAtB,GAAAM,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAAJ,EAAAI,EAAA,KAAAqH,EACArG,KAAArB,GAAAK,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAAJ,EAAAI,EAAA,KAAAqH,EACArG,KAAApB,GAAAI,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,IAAAJ,EAAAI,EAAA,KAAAqH,EAEArG,MAIAsO,gBAAA,SAAApD,GAEA,IAAAxM,EAAAsB,KAAAtB,EAAAC,EAAAqB,KAAArB,EAAAC,EAAAoB,KAAApB,EACA8P,EAAAxD,EAAAxM,EAAAiQ,EAAAzD,EAAAvM,EAAAiQ,EAAA1D,EAAAtM,EAAAiQ,EAAA3D,EAAA7E,EAIAyI,EAAAD,EAAAnQ,EAAAiQ,EAAA/P,EAAAgQ,EAAAjQ,EACAoQ,EAAAF,EAAAlQ,EAAAiQ,EAAAlQ,EAAAgQ,EAAA9P,EACAoQ,EAAAH,EAAAjQ,EAAA8P,EAAA/P,EAAAgQ,EAAAjQ,EACAuQ,GAAAP,EAAAhQ,EAAAiQ,EAAAhQ,EAAAiQ,EAAAhQ,EAQA,OAJAoB,KAAAtB,EAAAoQ,EAAAD,EAAAI,GAAAP,EAAAK,GAAAH,EAAAI,GAAAL,EACA3O,KAAArB,EAAAoQ,EAAAF,EAAAI,GAAAN,EAAAK,GAAAN,EAAAI,GAAAF,EACA5O,KAAApB,EAAAoQ,EAAAH,EAAAI,GAAAL,EAAAE,GAAAH,EAAAI,GAAAL,EAEA1O,MAIAkP,QAAA,SAAAtO,GAEA,OAAAZ,KAAAyO,aAAA7N,EAAAuO,oBAAAV,aAAA7N,EAAAwO,mBAIAC,UAAA,SAAAzO,GAEA,OAAAZ,KAAAyO,aAAA7N,EAAA0O,yBAAAb,aAAA7N,EAAA2O,cAIAC,mBAAA,SAAApV,GAKA,IAAAsE,EAAAsB,KAAAtB,EAAAC,EAAAqB,KAAArB,EAAAC,EAAAoB,KAAApB,EACAI,EAAA5E,EAAA6P,SAMA,OAJAjK,KAAAtB,EAAAM,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAAJ,EACAoB,KAAArB,EAAAK,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAAJ,EACAoB,KAAApB,EAAAI,EAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,EAAA,IAAAJ,EAEAoB,KAAAiL,aAIAwE,OAAA,SAAAjE,GAMA,OAJAxL,KAAAtB,GAAA8M,EAAA9M,EACAsB,KAAArB,GAAA6M,EAAA7M,EACAqB,KAAApB,GAAA4M,EAAA5M,EAEAoB,MAIA0P,aAAA,SAAAnC,GAEA,OAAAvN,KAAA1B,eAAA,EAAAiP,IAIA9J,IAAA,SAAA+H,GAMA,OAJAxL,KAAAtB,EAAAZ,KAAA2F,IAAAzD,KAAAtB,EAAA8M,EAAA9M,GACAsB,KAAArB,EAAAb,KAAA2F,IAAAzD,KAAArB,EAAA6M,EAAA7M,GACAqB,KAAApB,EAAAd,KAAA2F,IAAAzD,KAAApB,EAAA4M,EAAA5M,GAEAoB,MAIAjC,IAAA,SAAAyN,GAMA,OAJAxL,KAAAtB,EAAAZ,KAAAC,IAAAiC,KAAAtB,EAAA8M,EAAA9M,GACAsB,KAAArB,EAAAb,KAAAC,IAAAiC,KAAArB,EAAA6M,EAAA7M,GACAqB,KAAApB,EAAAd,KAAAC,IAAAiC,KAAApB,EAAA4M,EAAA5M,GAEAoB,MAIAwE,MAAA,SAAAf,EAAA1F,GAQA,OAJAiC,KAAAtB,EAAAZ,KAAAC,IAAA0F,EAAA/E,EAAAZ,KAAA2F,IAAA1F,EAAAW,EAAAsB,KAAAtB,IACAsB,KAAArB,EAAAb,KAAAC,IAAA0F,EAAA9E,EAAAb,KAAA2F,IAAA1F,EAAAY,EAAAqB,KAAArB,IACAqB,KAAApB,EAAAd,KAAAC,IAAA0F,EAAA7E,EAAAd,KAAA2F,IAAA1F,EAAAa,EAAAoB,KAAApB,IAEAoB,MAIA2P,aAEAlM,EAAA,IAAAzH,EACA+B,EAAA,IAAA/B,EAEA,SAAA4T,EAAAC,GAKA,OAHApM,EAAAmF,IAAAgH,OACA7R,EAAA6K,IAAAiH,OAEA7P,KAAAwE,MAAAf,EAAA1F,KAMA+R,YAAA,SAAArM,EAAA1F,GAEA,IAAAzB,EAAA0D,KAAA1D,SAEA,OAAA0D,KAAA0P,aAAApT,GAAA,GAAAgC,eAAAR,KAAAC,IAAA0F,EAAA3F,KAAA2F,IAAA1F,EAAAzB,MAIA+I,MAAA,WAMA,OAJArF,KAAAtB,EAAAZ,KAAAuH,MAAArF,KAAAtB,GACAsB,KAAArB,EAAAb,KAAAuH,MAAArF,KAAArB,GACAqB,KAAApB,EAAAd,KAAAuH,MAAArF,KAAApB,GAEAoB,MAIAgG,KAAA,WAMA,OAJAhG,KAAAtB,EAAAZ,KAAAkI,KAAAhG,KAAAtB,GACAsB,KAAArB,EAAAb,KAAAkI,KAAAhG,KAAArB,GACAqB,KAAApB,EAAAd,KAAAkI,KAAAhG,KAAApB,GAEAoB,MAIA+P,MAAA,WAMA,OAJA/P,KAAAtB,EAAAZ,KAAAiS,MAAA/P,KAAAtB,GACAsB,KAAArB,EAAAb,KAAAiS,MAAA/P,KAAArB,GACAqB,KAAApB,EAAAd,KAAAiS,MAAA/P,KAAApB,GAEAoB,MAIAgQ,YAAA,WAMA,OAJAhQ,KAAAtB,EAAAsB,KAAAtB,EAAA,EAAAZ,KAAAkI,KAAAhG,KAAAtB,GAAAZ,KAAAuH,MAAArF,KAAAtB,GACAsB,KAAArB,EAAAqB,KAAArB,EAAA,EAAAb,KAAAkI,KAAAhG,KAAArB,GAAAb,KAAAuH,MAAArF,KAAArB,GACAqB,KAAApB,EAAAoB,KAAApB,EAAA,EAAAd,KAAAkI,KAAAhG,KAAApB,GAAAd,KAAAuH,MAAArF,KAAApB,GAEAoB,MAIAiQ,OAAA,WAMA,OAJAjQ,KAAAtB,GAAAsB,KAAAtB,EACAsB,KAAArB,GAAAqB,KAAArB,EACAqB,KAAApB,GAAAoB,KAAApB,EAEAoB,MAIA+K,IAAA,SAAAS,GAEA,OAAAxL,KAAAtB,EAAA8M,EAAA9M,EAAAsB,KAAArB,EAAA6M,EAAA7M,EAAAqB,KAAApB,EAAA4M,EAAA5M,GAMA6M,SAAA,WAEA,OAAAzL,KAAAtB,EAAAsB,KAAAtB,EAAAsB,KAAArB,EAAAqB,KAAArB,EAAAqB,KAAApB,EAAAoB,KAAApB,GAIAtC,OAAA,WAEA,OAAAwB,KAAAwK,KAAAtI,KAAAtB,EAAAsB,KAAAtB,EAAAsB,KAAArB,EAAAqB,KAAArB,EAAAqB,KAAApB,EAAAoB,KAAApB,IAIAsR,gBAAA,WAEA,OAAApS,KAAAkN,IAAAhL,KAAAtB,GAAAZ,KAAAkN,IAAAhL,KAAArB,GAAAb,KAAAkN,IAAAhL,KAAApB,IAIAqM,UAAA,WAEA,OAAAjL,KAAA0P,aAAA1P,KAAA1D,UAAA,IAIA6T,UAAA,SAAA7T,GAEA,OAAA0D,KAAAiL,YAAA3M,eAAAhC,IAIAyI,KAAA,SAAAyG,EAAA4E,GAMA,OAJApQ,KAAAtB,IAAA8M,EAAA9M,EAAAsB,KAAAtB,GAAA0R,EACApQ,KAAArB,IAAA6M,EAAA7M,EAAAqB,KAAArB,GAAAyR,EACApQ,KAAApB,IAAA4M,EAAA5M,EAAAoB,KAAApB,GAAAwR,EAEApQ,MAIAqQ,YAAA,SAAA7M,EAAA8M,EAAAF,GAEA,OAAApQ,KAAA/C,WAAAqT,EAAA9M,GAAAlF,eAAA8R,GAAA5R,IAAAgF,IAIA+M,MAAA,SAAA/E,EAAAnF,GAEA,YAAAK,IAAAL,GAEAsF,QAAAC,KAAA,6FACA5L,KAAAwQ,aAAAhF,EAAAnF,IAIArG,KAAAwQ,aAAAxQ,KAAAwL,IAIAgF,aAAA,SAAA3N,EAAA9D,GAEA,IAAA0R,EAAA5N,EAAAnE,EAAAgS,EAAA7N,EAAAlE,EAAAgS,EAAA9N,EAAAjE,EACAgS,EAAA7R,EAAAL,EAAAmS,EAAA9R,EAAAJ,EAAAmS,EAAA/R,EAAAH,EAMA,OAJAoB,KAAAtB,EAAAgS,EAAAI,EAAAH,EAAAE,EACA7Q,KAAArB,EAAAgS,EAAAC,EAAAH,EAAAK,EACA9Q,KAAApB,EAAA6R,EAAAI,EAAAH,EAAAE,EAEA5Q,MAIA+Q,gBAAA,SAAAC,GAEA,IAAAzD,EAAAyD,EAAAjG,IAAA/K,MAAAgR,EAAAvF,WAEA,OAAAzL,KAAAgH,KAAAgK,GAAA1S,eAAAiP,IAIA0D,gBAEAzN,EAAA,IAAAxH,EAEA,SAAAkV,GAIA,OAFA1N,EAAAwD,KAAAhH,MAAA+Q,gBAAAG,GAEAlR,KAAAiO,IAAAzK,KAMA2N,QAAA,WAKA,IAAA3N,EAAA,IAAAxH,EAEA,gBAAAoV,GAEA,OAAApR,KAAAiO,IAAAzK,EAAAwD,KAAAoK,GAAA9S,eAAA,EAAA0B,KAAA+K,IAAAqG,MATA,GAeApT,QAAA,SAAAwN,GAEA,IAAA6F,EAAArR,KAAA+K,IAAAS,GAAA1N,KAAAwK,KAAAtI,KAAAyL,WAAAD,EAAAC,YAIA,OAAA3N,KAAAqN,KAAoBxH,EAAKa,MAAA6M,GAAA,OAIzBC,WAAA,SAAA9F,GAEA,OAAA1N,KAAAwK,KAAAtI,KAAAuR,kBAAA/F,KAIA+F,kBAAA,SAAA/F,GAEA,IAAAgG,EAAAxR,KAAAtB,EAAA8M,EAAA9M,EAAA+S,EAAAzR,KAAArB,EAAA6M,EAAA7M,EAAA+S,EAAA1R,KAAApB,EAAA4M,EAAA5M,EAEA,OAAA4S,IAAAC,IAAAC,KAIAC,oBAAA,SAAAnG,GAEA,OAAA1N,KAAAkN,IAAAhL,KAAAtB,EAAA8M,EAAA9M,GAAAZ,KAAAkN,IAAAhL,KAAArB,EAAA6M,EAAA7M,GAAAb,KAAAkN,IAAAhL,KAAApB,EAAA4M,EAAA5M,IAIAgT,iBAAA,SAAA7V,GAEA,OAAAiE,KAAA6R,uBAAA9V,EAAA+V,OAAA/V,EAAAgW,IAAAhW,EAAAsV,QAIAQ,uBAAA,SAAAC,EAAAC,EAAAV,GAEA,IAAAW,EAAAlU,KAAAuK,IAAA0J,GAAAD,EAMA,OAJA9R,KAAAtB,EAAAsT,EAAAlU,KAAAuK,IAAAgJ,GACArR,KAAArB,EAAAb,KAAAkK,IAAA+J,GAAAD,EACA9R,KAAApB,EAAAoT,EAAAlU,KAAAkK,IAAAqJ,GAEArR,MAIAiS,mBAAA,SAAA5X,GAEA,OAAA2F,KAAAkS,yBAAA7X,EAAAyX,OAAAzX,EAAAgX,MAAAhX,EAAAsE,IAIAuT,yBAAA,SAAAJ,EAAAT,EAAA1S,GAMA,OAJAqB,KAAAtB,EAAAoT,EAAAhU,KAAAuK,IAAAgJ,GACArR,KAAArB,IACAqB,KAAApB,EAAAkT,EAAAhU,KAAAkK,IAAAqJ,GAEArR,MAIAmS,sBAAA,SAAA/X,GAEA,IAAA4E,EAAA5E,EAAA6P,SAMA,OAJAjK,KAAAtB,EAAAM,EAAA,IACAgB,KAAArB,EAAAK,EAAA,IACAgB,KAAApB,EAAAI,EAAA,IAEAgB,MAIAoS,mBAAA,SAAAhY,GAEA,IAAAiY,EAAArS,KAAAsS,oBAAAlY,EAAA,GAAAkC,SACAiW,EAAAvS,KAAAsS,oBAAAlY,EAAA,GAAAkC,SACAkW,EAAAxS,KAAAsS,oBAAAlY,EAAA,GAAAkC,SAMA,OAJA0D,KAAAtB,EAAA2T,EACArS,KAAArB,EAAA4T,EACAvS,KAAApB,EAAA4T,EAEAxS,MAIAsS,oBAAA,SAAAlY,EAAAwT,GAEA,OAAA5N,KAAA8M,UAAA1S,EAAA6P,SAAA,EAAA2D,IAIAf,OAAA,SAAArB,GAEA,OAAAA,EAAA9M,IAAAsB,KAAAtB,GAAA8M,EAAA7M,IAAAqB,KAAArB,GAAA6M,EAAA5M,IAAAoB,KAAApB,GAIAkO,UAAA,SAAAC,EAAAC,GAQA,YANAtG,IAAAsG,MAAA,GAEAhN,KAAAtB,EAAAqO,EAAAC,GACAhN,KAAArB,EAAAoO,EAAAC,EAAA,GACAhN,KAAApB,EAAAmO,EAAAC,EAAA,GAEAhN,MAIAiN,QAAA,SAAAF,EAAAC,GASA,YAPAtG,IAAAqG,MAAA,SACArG,IAAAsG,MAAA,GAEAD,EAAAC,GAAAhN,KAAAtB,EACAqO,EAAAC,EAAA,GAAAhN,KAAArB,EACAoO,EAAAC,EAAA,GAAAhN,KAAApB,EAEAmO,GAIA0F,oBAAA,SAAAC,EAAA9E,EAAAZ,GAYA,YAVAtG,IAAAsG,GAEArB,QAAAC,KAAA,uEAIA5L,KAAAtB,EAAAgU,EAAAC,KAAA/E,GACA5N,KAAArB,EAAA+T,EAAAE,KAAAhF,GACA5N,KAAApB,EAAA8T,EAAAG,KAAAjF,GAEA5N","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const {Vector3} = require('three/src/math/Vector3');\n\nmodule.exports = function homogenizeTriangles (verts, faces, tol) {\n    verts = verts.slice(0);\n    faces = faces.slice(0);\n\n    for(var i = 0; i < faces.length; i += 3) {\n        let splitFace = () => {\n            const vecs = [0, 1, 2].map(_f => {\n                const vertIdx = faces[i + _f] * 3;\n                return new Vector3(\n                    verts[vertIdx],\n                    verts[vertIdx + 1],\n                    verts[vertIdx + 2]\n                );\n            });\n\n            const segs = vecs.map((_v, _i) => {\n                return {\n                    vecIndices: [_i, (_i+1)%3],\n                    deltaVec: (new Vector3()).subVectors(vecs[(_i+1)%3], _v)\n                };\n            });\n\n            let do_split = false;\n            for(var j = 0; j < 3; j++){\n                if(segs[j].deltaVec.length() > tol){\n                    do_split = true;\n                    break;\n                }\n            }\n\n            if(!do_split){\n                return;\n            }\n\n            let orderedSegs = segs.sort((_sa, _sb)=>{return (_sa.deltaVec.length() > _sb.deltaVec.length())? -1 : 1}).slice(0,2);\n            let sharedVtx = null;\n\n            //find the vertex shared by the two longest edges\n            const shared = {};\n            orderedSegs.forEach(_o => {\n                _o.vecIndices.forEach(_vi => {\n                    shared[_vi] = shared[_vi] || 0;\n                    shared[_vi]++;\n\n                    if(shared[_vi] == 2){\n                        sharedVtx = _vi;\n                    }\n                });\n            });\n\n            //ensure orderedSegs is always in CCW order\n            const maxAngle = (_o) => {\n                Math.max(\n                    vecs[sharedVtx].angleTo(vecs[_o.vecIndices[0]]),\n                    vecs[sharedVtx].angleTo(vecs[_o.vecIndices[1]])\n                );\n            };\n\n            orderedSegs = orderedSegs.sort((_oa, _ob) => {\n                return (maxAngle(_oa) < maxAngle(_ob))? -1 : 1;\n            });\n\n            //create two new vertices\n            const newVertsIdx = orderedSegs.map(_o => {\n                const half = _o.deltaVec.clone().multiplyScalar(0.5);\n\n                const newVtx = vecs[_o.vecIndices[0]].clone();\n                newVtx.add(half);\n\n                verts.push(newVtx.x, newVtx.y, newVtx.z);\n                return (verts.length / 3) - 1;\n\n            });\n\n            //rearrange the faces\n            const _fb = i + ((sharedVtx + 1) % 3);\n            const _fc = i + ((sharedVtx + 2) % 3);\n            const b = faces[_fb];\n            const c = faces[_fc];\n            const d = newVertsIdx[0];\n            const e = newVertsIdx[1];\n\n            faces[_fb] = e;\n            faces[_fc] = d;\n\n            faces.push(e, b, c);\n            faces.push(d, e, c);\n\n            return splitFace();\n        };\n\n        splitFace();\n    }\n\n    return {\n        verts: verts,\n        faces: faces\n    }\n};","const {\n    PerspectiveCamera,\n    Scene,\n    WebGLRenderer,\n    Vector3,\n    Face3,\n    MeshBasicMaterial,\n    Mesh,\n    Geometry,\n    Points,\n    PointsMaterial,\n    BufferGeometry,\n    Float32BufferAttribute,\n    Uint32BufferAttribute\n} = require('three');\n\nconst homogenizeTriangles = require('./homogenize-triangles');\n\nclass HomogenizeTrianglesDemo {\n\n    constructor () {\n        this.container = window.document.body;\n        this.init();\n        this.animate();\n    }\n\n    onWindowResize () {\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.camera.aspect = this.renderer.domElement.clientWidth / this.renderer.domElement.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( this.renderer.domElement.clientWidth, this.renderer.domElement.clientHeight );\n    }\n\n    init () {\n        this.scene = new Scene();\n\n        this.camera = new PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );\n        this.camera.position.z = 20;\n        this.camera.lookAt(new Vector3(0,0,0));\n        this.camera.updateMatrixWorld();\n\n        this.renderer = new WebGLRenderer();\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n        this.container.appendChild( this.renderer.domElement );\n\n        //construct a narrow triangle\n        const narrowTri = new Geometry();\n        narrowTri.vertices.push(\n            new Vector3(-1,5,0),\n            new Vector3(-1,-5,0),\n            new Vector3(1,-5,0),\n            new Vector3(1,5,0)\n        );\n\n        narrowTri.faces.push(\n            new Face3(0,1,2),\n            new Face3(0,2,3)\n        );\n\n        narrowTri.computeBoundingSphere();\n        narrowTri.computeBoundingBox();\n        narrowTri.computeFaceNormals();\n        narrowTri.computeVertexNormals();\n\n        const createMultiMesh = (geo) => {\n            const meshes = [];\n\n            let mesh = new Mesh(geo, new MeshBasicMaterial({\n                wireframe: true,\n                color: 0xffffff\n            }));\n\n            meshes.push(mesh);\n\n            mesh = new Mesh(geo, new MeshBasicMaterial({\n                transparent: true,\n                opacity: 0.2,\n                color: 0xffffff\n            }));\n\n            meshes.push(mesh);\n\n            mesh = new Points(geo, new PointsMaterial({\n                size: 1,\n                color: 0xffffff\n            }));\n\n            meshes.push(mesh);\n\n            meshes.forEach(_m => {\n                this.scene.add(_m);\n            });\n\n            return meshes;\n        };\n\n        createMultiMesh(narrowTri).forEach(_t => {\n            _t.position.x = -10;\n        });\n\n        const dividedTri = new BufferGeometry();\n        const res = homogenizeTriangles(\n            narrowTri.vertices.map(_v => {return [_v.x, _v.y, _v.z]}).flat(),\n            narrowTri.faces.map(_f => {return [_f.a, _f.b, _f.c]}).flat(),\n            6\n        );\n\n        dividedTri.addAttribute('position', new Float32BufferAttribute(Float32Array.from(res.verts), 3));\n        dividedTri.setIndex(new Uint32BufferAttribute(Uint32Array.from(res.faces), 1));\n\n        createMultiMesh(dividedTri).forEach(_t => {\n            _t.position.x = 10;\n        });\n\n        window.addEventListener( 'resize', ()=>{\n            this.onWindowResize();\n        }, false );\n    }\n\n    animate(){\n        requestAnimationFrame( () => {\n            this.animate();\n        } );\n\n        this.renderer.render( this.scene, this.camera );\n    }\n}\n\nwindow.addEventListener('DOMContentLoaded', function () {\n    window.demo = new HomogenizeTrianglesDemo();\n});","module.exports = (__webpack_require__(3))(1);","module.exports = vendor;","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n\nexport { _Math };\n","import { _Math } from './Math.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector3 };\n","/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nimport { _Math } from './Math.js';\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n\nexport { Quaternion };\n"],"sourceRoot":""}