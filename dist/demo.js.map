{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/homogenize-triangles.js","webpack:///./node_modules/three/src/math/Math.js","webpack:///./node_modules/three/src/math/Vector3.js","webpack:///./node_modules/three/src/math/Quaternion.js","webpack:///./src/demo.js","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor","webpack:///external \"vendor\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vector3","require","verts","faces","facenormals","tol","slice","spatialIndex","createOrShareVtx","vtx","points","toArray","currentPath","forEach","_p","_i","length","undefined","push","x","y","z","faceNormal","splitFace","vecs","map","_f","vertIdx","segs","_v","vecIndices","deltaVec","subVectors","do_split","j","orderedSegs","sort","_sa","_sb","sharedVtx","shared","_o","_vi","newVertsIdx","_oa","_ob","crossVectors","angleTo","Math","PI","half","clone","multiplyScalar","newVtx","add","_fb","_fc","b","e","v1","min","max","quaternion","_Math","DEG2RAD","RAD2DEG","generateUUID","lut","toString","d0","random","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","Quaternion","w","this","_x","_y","_z","_w","assign","slerp","qa","qb","qm","copy","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","cos","dir","sqrSin","Number","EPSILON","sin","sqrt","len","atan2","tDir","f","defineProperties","set","onChangeCallback","isQuaternion","constructor","setFromEuler","euler","update","isEuler","Error","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","dot","abs","normalize","q","acos","rotateTowards","step","inverse","conjugate","v","lengthSq","multiply","console","warn","multiplyQuaternions","premultiply","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","equals","fromArray","array","offset","onChange","callback","__webpack_exports__","isVector3","setScalar","scalar","setX","setY","setZ","setComponent","index","getComponent","addVectors","addScalar","addScaledVector","sub","subScalar","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix3","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","manhattanLength","setLength","alpha","lerpVectors","v2","cross","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","theta","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","fromBufferAttribute","attribute","getX","getY","getZ","PerspectiveCamera","Scene","WebGLRenderer","Face3","MeshBasicMaterial","Mesh","Geometry","Points","PointsMaterial","BufferGeometry","Float32BufferAttribute","Uint32BufferAttribute","homogenizeTriangles","HomogenizeTrianglesDemo","container","window","document","body","init","animate","onWindowResize","renderer","setSize","innerWidth","innerHeight","aspect","domElement","clientWidth","clientHeight","updateProjectionMatrix","scene","position","lookAt","updateMatrixWorld","setPixelRatio","devicePixelRatio","appendChild","narrowTri","vertices","computeBoundingSphere","computeBoundingBox","computeFaceNormals","computeVertexNormals","createMultiMesh","geo","meshes","mesh","wireframe","color","transparent","opacity","size","_m","_t","dividedTri","res","flat","addAttribute","Float32Array","from","setIndex","Uint32Array","addEventListener","requestAnimationFrame","render","demo","vendor"],"mappings":"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","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","const {Vector3} = require('three/src/math/Vector3');\n\nmodule.exports = function homogenizeTriangles (verts, faces, facenormals, tol) {\n    verts = verts.slice(0);\n    faces = faces.slice(0);\n    facenormals = facenormals.slice(0);\n\n    const spatialIndex = {};\n\n    const createOrShareVtx = (vtx) => {\n        const points = vtx.toArray();\n        let currentPath = spatialIndex;\n\n        points.forEach((_p, _i) => {\n            if(_i == (points.length - 1)){\n                if(currentPath[_p] === undefined){\n                    verts.push(vtx.x, vtx.y, vtx.z);\n                    currentPath[_p] = (verts.length / 3) - 1;\n                }\n            }else{\n                currentPath[_p] = currentPath[_p] || {};\n            }\n\n            currentPath = currentPath[_p];\n        });\n\n        return currentPath;\n    };\n\n    for(var i = 0; i < faces.length; i += 3) {\n\n        let faceNormal = new Vector3(\n            facenormals[i],\n            facenormals[i+1],\n            facenormals[i+2]\n        );\n\n        let splitFace = () => {\n            const vecs = [0, 1, 2].map(_f => {\n                const vertIdx = faces[i + _f] * 3;\n                return new Vector3(\n                    verts[vertIdx],\n                    verts[vertIdx + 1],\n                    verts[vertIdx + 2]\n                );\n            });\n\n            const segs = vecs.map((_v, _i) => {\n                return {\n                    vecIndices: [_i, (_i+1)%3],\n                    deltaVec: (new Vector3()).subVectors(vecs[(_i+1)%3], _v)\n                };\n            });\n\n            let do_split = false;\n            for(var j = 0; j < 3; j++){\n                if(segs[j].deltaVec.length() > tol){\n                    do_split = true;\n                    break;\n                }\n            }\n\n            if(!do_split){\n                return;\n            }\n\n            let orderedSegs = segs.sort((_sa, _sb)=>{return (_sa.deltaVec.length() > _sb.deltaVec.length())? -1 : 1}).slice(0,2);\n            let sharedVtx = null;\n\n            //find the vertex shared by the two longest edges\n            const shared = {};\n            orderedSegs.forEach(_o => {\n                _o.vecIndices.forEach(_vi => {\n                    shared[_vi] = shared[_vi] || 0;\n                    shared[_vi]++;\n\n                    if(shared[_vi] == 2){\n                        sharedVtx = _vi;\n                    }\n                });\n            });\n\n            orderedSegs = orderedSegs.sort((_oa, _ob) => {\n\n                const cross = (new Vector3()).crossVectors(_oa.deltaVec, _ob.deltaVec);\n                const ang = cross.angleTo(faceNormal);\n\n                return (ang < (Math.PI/2))? -1 : 1;\n            });\n\n            //create two new vertices\n            const newVertsIdx = orderedSegs.map(_o => {\n                const half = _o.deltaVec.clone().multiplyScalar(0.5);\n\n                const newVtx = vecs[_o.vecIndices[0]].clone();\n                newVtx.add(half);\n\n                return createOrShareVtx(newVtx);\n\n            });\n\n            //rearrange the faces\n            const _fb = i + ((sharedVtx + 1) % 3);\n            const _fc = i + ((sharedVtx + 2) % 3);\n            const b = faces[_fb];\n            const c = faces[_fc];\n            const d = newVertsIdx[0];\n            const e = newVertsIdx[1];\n\n            faces[_fb] = e;\n            faces[_fc] = d;\n\n            faces.push(e, b, c);\n            faces.push(d, e, c);\n\n            //copy this facenormal twice (one for each new face)\n            [0,1].forEach(() => {\n                facenormals.push(faceNormal.x, faceNormal.y, faceNormal.z);\n            });\n\n            return splitFace();\n        };\n\n        splitFace();\n    }\n\n    return {\n        verts: verts,\n        faces: faces,\n        facenormals: facenormals\n    }\n};","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n\nexport { _Math };\n","import { _Math } from './Math.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector3 };\n","/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nimport { _Math } from './Math.js';\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n\nexport { Quaternion };\n","const {\n    PerspectiveCamera,\n    Scene,\n    WebGLRenderer,\n    Vector3,\n    Face3,\n    MeshBasicMaterial,\n    Mesh,\n    Geometry,\n    Points,\n    PointsMaterial,\n    BufferGeometry,\n    Float32BufferAttribute,\n    Uint32BufferAttribute\n} = require('three');\n\nconst homogenizeTriangles = require('./homogenize-triangles');\n\nclass HomogenizeTrianglesDemo {\n\n    constructor () {\n        this.container = window.document.body;\n        this.init();\n        this.animate();\n    }\n\n    onWindowResize () {\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.camera.aspect = this.renderer.domElement.clientWidth / this.renderer.domElement.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( this.renderer.domElement.clientWidth, this.renderer.domElement.clientHeight );\n    }\n\n    init () {\n        this.scene = new Scene();\n\n        this.camera = new PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );\n        this.camera.position.z = 20;\n        this.camera.lookAt(new Vector3(0,0,0));\n        this.camera.updateMatrixWorld();\n\n        this.renderer = new WebGLRenderer();\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n        this.container.appendChild( this.renderer.domElement );\n\n        //construct a narrow triangle\n        const narrowTri = new Geometry();\n\n        //Vertical oriented rectangle\n        narrowTri.vertices.push(\n            new Vector3(-1,5,0),\n            new Vector3(-1,-5,0),\n            new Vector3(1,-5,0),\n            new Vector3(1,5,0)\n        );\n\n        // narrowTri.vertices.push(\n        //     new Vector3(-5,1,0),\n        //     new Vector3(-5,-1,0),\n        //     new Vector3(5,-1,0),\n        //     new Vector3(5,1,0)\n        // );\n\n        narrowTri.faces.push(\n            new Face3(0,1,2),\n            new Face3(0,2,3)\n        );\n\n        narrowTri.computeBoundingSphere();\n        narrowTri.computeBoundingBox();\n        narrowTri.computeFaceNormals();\n        narrowTri.computeVertexNormals();\n\n        const createMultiMesh = (geo) => {\n            const meshes = [];\n\n            let mesh = new Mesh(geo, new MeshBasicMaterial({\n                wireframe: true,\n                color: 0xffffff\n            }));\n\n            meshes.push(mesh);\n\n            mesh = new Mesh(geo, new MeshBasicMaterial({\n                transparent: true,\n                opacity: 0.2,\n                color: 0xffffff\n            }));\n\n            meshes.push(mesh);\n\n            mesh = new Points(geo, new PointsMaterial({\n                size: 0.4,\n                color: 0xffffff\n            }));\n\n            meshes.push(mesh);\n\n            meshes.forEach(_m => {\n                this.scene.add(_m);\n            });\n\n            return meshes;\n        };\n\n        createMultiMesh(narrowTri).forEach(_t => {\n            _t.position.x = -10;\n        });\n\n        const dividedTri = new BufferGeometry();\n        const res = homogenizeTriangles(\n            narrowTri.vertices.map(_v => {return _v.toArray()}).flat(),\n            narrowTri.faces.map(_f => {return [_f.a, _f.b, _f.c]}).flat(),\n            narrowTri.faces.map(_f => {return _f.normal.toArray() }).flat(),\n            2\n        );\n\n        dividedTri.addAttribute('position', new Float32BufferAttribute(Float32Array.from(res.verts), 3));\n        dividedTri.setIndex(new Uint32BufferAttribute(Uint32Array.from(res.faces), 1));\n\n        createMultiMesh(dividedTri).forEach(_t => {\n            _t.position.x = 10;\n        });\n\n        window.addEventListener( 'resize', ()=>{\n            this.onWindowResize();\n        }, false );\n    }\n\n    animate(){\n        requestAnimationFrame( () => {\n            this.animate();\n        } );\n\n        this.renderer.render( this.scene, this.camera );\n    }\n}\n\nwindow.addEventListener('DOMContentLoaded', function () {\n    window.demo = new HomogenizeTrianglesDemo();\n});","module.exports = (__webpack_require__(4))(1);","module.exports = vendor;"],"sourceRoot":""}